/**
 * Mouse Dictionary (https://github.com/wtetsu/mouse-dictionary/)
 * Copyright 2018-present wtetsu
 * Licensed under MIT
 */

// Mouse Dictionary regards only these characters as target characters to look up dictionary data.
const LETTER_RULE = [
  // [32, 0], //
  // [33, 0], // !
  // [34, 0], // "
  // [35, 0], // #
  // [36, 0], // $
  // [37, 0], // %
  // [38, 0], // &
  [39, 3], // '
  // [40, 0], // (
  // [41, 0], // )
  // [42, 0], // *
  // [43, 0], // +
  [44, 2], // ,
  [45, 3], // -
  [46, 2], // .
  [47, 2], // /
  [48, 3], // 0
  [49, 3], // 1
  [50, 3], // 2
  [51, 3], // 3
  [52, 3], // 4
  [53, 3], // 5
  [54, 3], // 6
  [55, 3], // 7
  [56, 3], // 8
  [57, 3], // 9
  // [58, 0], // :
  // [59, 0], // ;
  // [60, 0], // <
  // [61, 0], // =
  // [62, 0], // >
  // [63, 0], // ?
  // [64, 0], // @
  [65, 3], // A
  [66, 3], // B
  [67, 3], // C
  [68, 3], // D
  [69, 3], // E
  [70, 3], // F
  [71, 3], // G
  [72, 3], // H
  [73, 3], // I
  [74, 3], // J
  [75, 3], // K
  [76, 3], // L
  [77, 3], // M
  [78, 3], // N
  [79, 3], // O
  [80, 3], // P
  [81, 3], // Q
  [82, 3], // R
  [83, 3], // S
  [84, 3], // T
  [85, 3], // U
  [86, 3], // V
  [87, 3], // W
  [88, 3], // X
  [89, 3], // Y
  [90, 3], // Z
  // [91, 0], // [
  // [92, 0], // \
  // [93, 0], // ]
  // [94, 0], // ^
  [95, 3], // _
  // [96, 0], // `
  [97, 3], // a
  [98, 3], // b
  [99, 3], // c
  [100, 3], // d
  [101, 3], // e
  [102, 3], // f
  [103, 3], // g
  [104, 3], // h
  [105, 3], // i
  [106, 3], // j
  [107, 3], // k
  [108, 3], // l
  [109, 3], // m
  [110, 3], // n
  [111, 3], // o
  [112, 3], // p
  [113, 3], // q
  [114, 3], // r
  [115, 3], // s
  [116, 3], // t
  [117, 3], // u
  [118, 3], // v
  [119, 3], // w
  [120, 3], // x
  [121, 3], // y
  [122, 3], // z
  // [123, 0], // {
  // [124, 0], // |
  // [125, 0], // }
  // [126, 0], // ~
  [8204, 2], // zero width non-joiner,\
  [8209, 3] // â€‘
];

const m = new Map(LETTER_RULE);

export default letter => {
  return m.get(letter);
};
